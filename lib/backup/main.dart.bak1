import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() {
  const fText = 'Привет Flutter';
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.amberAccent),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});
  final String title;
  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _httpText = '';
  void _incrementCounter() {
      setState(() {
        http.get(Uri.parse('http://188.225.75.241/test')).then((response) {
          print("Response status: ${response.statusCode}");
          if (response.statusCode == 200) {
            _httpText = response.body;
          } else {
            _httpText = 'Error load data';
          }
        }).catchError((error) {
          print("Error: $error");
        });
      });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_httpText',
              style: Theme.of(context).textTheme.headlineSmall,
            ),
            Container(
              color: Colors.transparent,
              child: Image.network("http://mobiosoft.com/eventy/ep/images/tvpservice_icon.png"),
            ),
            ElevatedButton(
                child:Text("Click", style: TextStyle(fontSize: 22)),
                onPressed:(){
                  //http.get(Uri.parse('http://188.225.75.241/test')).then((response) {
				    http.get(Uri.parse('http://188.225.75.241/getmdata?user=user1@mobiosoft.com')).then((response) {
                    print("Response status: ${response.statusCode}");
                    print("Response body: ${response.body}");
                  }).catchError((error){
                    print("Error: $error");
                  });
                }
            ),
            TextField(decoration: InputDecoration(
              border: OutlineInputBorder(),
              icon: Icon(Icons.login),
              hintText: "Введите логин",
              helperText: "Логин используется для входа в систему"
            ),
            onSubmitted: (text) {
              print("onSubmitted");
              print("Введенный текст: $text");
              }),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
